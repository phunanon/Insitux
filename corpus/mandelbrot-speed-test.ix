(function mandelbrot width height depth
  (.. str 
    (for yy (range height)
         xx (range width)
      (let c_re (/ (* (- xx (/ width 2)) 4) width)
           c_im (/ (* (- yy (/ height 2)) 4) width)
           x 0 y 0 i 0)
      (while (and (<= (+ (** x) (** y)) 4)
                  (< i depth))
        (let x2 (+ c_re (- (** x) (** y)))
             y  (+ c_im (* 2 x y))
             x  x2
             i  (inc i)))
      (strn ((zero? xx) "\n") (i "ABCDEFGHIJ ")))))


(var results [])
(var top 10)
(function best-avg
  (when (< (len results) 2)
    (return (0 results)))
  (let tops (first top (sort results)))
  (floor (/ (.. + tops) (len tops))))

(function measure n
  (let report [(time) (mandelbrot 100 100 10) (time)])
  (let diff (- (2 report) (0 report)))
  (var results (append diff results))
  (print n " " (version) ": took " diff "ms"
    "   " (best-avg) "ms best avg"))

(map measure (range 50))

(str "Average of top " top " results: " (best-avg) "ms")
